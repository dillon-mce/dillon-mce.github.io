<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Swift on Develop with Dillon</title>
    <link>https://dillon-mce.com/tags/swift/</link>
    <description>Recent content in Swift on Develop with Dillon</description>
    <image>
      <url>https://dillon-mce.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://dillon-mce.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 27 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://dillon-mce.com/tags/swift/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stop Throwing Away Errors</title>
      <link>https://dillon-mce.com/posts/dont-throw-away-errors/</link>
      <pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dillon-mce.com/posts/dont-throw-away-errors/</guid>
      <description>We all know how it goes when we are trying to get something working. We want to get there as fast as we can and we get focused on the &amp;ldquo;happy path&amp;rdquo;. Maybe we&amp;rsquo;re not that familiar with the technology/language/concept, but we have one specific goal or task we are trying to achieve and we don&amp;rsquo;t care so much about the edge cases or what will happen when things go wrong.</description>
    </item>
    
    <item>
      <title>5 Reasons to Use Typealias</title>
      <link>https://dillon-mce.com/posts/reasons-to-use-typealias/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dillon-mce.com/posts/reasons-to-use-typealias/</guid>
      <description>Swift has many features that allow us as the users of the language to customize how we write code, while still giving us all the protections of a statically typed language. Today we&amp;rsquo;re going to talk about one of those features which seems small, but it packs a lot of punch.
The typealias keyword lets you define a &amp;ldquo;type alias&amp;rdquo;, a custom name for a class, struct or any other existing type in Swift.</description>
    </item>
    
    <item>
      <title>Writing Short Code Isn&#39;t The Point</title>
      <link>https://dillon-mce.com/posts/writing-readable-code/</link>
      <pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dillon-mce.com/posts/writing-readable-code/</guid>
      <description>I don&amp;rsquo;t know about you, but I have spent a lot of time trying to write code in the shortest, most elegant way possible. I have put a lot of thought and time and effort into it over the years. And I see it a lot in other people&amp;rsquo;s code as well. I have seen it from both junior and senior developers. I have seen it in new code bases and mature code bases, both large and small.</description>
    </item>
    
    <item>
      <title>Algorithms in Swift - Intro</title>
      <link>https://dillon-mce.com/posts/algorithms-in-swift-intro/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://dillon-mce.com/posts/algorithms-in-swift-intro/</guid>
      <description>In this post, I want to talk about algorithms in general, take a look at the binary search algorithm, and examine how to think about the complexity of an algorithm.</description>
    </item>
    
  </channel>
</rss>
